name: CPP Terraform Azure Policy Management

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: read

env:
  TF_IN_AUTOMATION: "true"
  TF_INPUT: "0"

jobs:
  precommit:
    name: Pre-commit (PR only)
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Run pre-commit hooks
        uses: pre-commit/action@v3.0.1

  plan_nlv:
    name: Plan Nonlive
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Azure Login (Nonlive)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_NONLIVE }}

      - name: Terraform Init (Nonlive backend)
        run: terraform init -backend-config=backend_config/nonlive.conf

      - name: Terraform Plan (tenant=cpp_nle)
        run: terraform plan -input=false -no-color -var "tenant=cpp_nle"

  plan_lve:
    name: Plan Live
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Azure Login (Live)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_LIVE }}

      - name: Terraform Init (Live backend)
        run: terraform init -backend-config=backend_config/live.conf

      - name: Terraform Plan (tenant=cpp_live)
        run: terraform plan -input=false -no-color -var "tenant=cpp_live"

  apply_nlv:
    name: Apply Nonlive (master only)
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [ plan_nlv ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Azure Login (Nonlive)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_NONLIVE }}

      - name: Terraform Init (Nonlive backend)
        run: terraform init -backend-config=backend_config/nonlive.conf

      - name: Terraform Plan (tenant=cpp_nle)
        run: terraform plan -input=false -no-color -out=plan-nlv.tfplan -var "tenant=cpp_nle"

      - name: Terraform Apply (Nonlive)
        run: terraform apply -input=false -no-color -auto-approve plan-nlv.tfplan

  apply_lve:
    name: Apply Live (master only)
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [ plan_lve ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Azure Login (Live)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_LIVE }}

      - name: Terraform Init (Live backend)
        run: terraform init -backend-config=backend_config/live.conf

      - name: Terraform Plan (tenant=cpp_live)
        run: terraform plan -input=false -no-color -out=plan-lve.tfplan -var "tenant=cpp_live"

      - name: Terraform Apply (Live)
        run: terraform apply -input=false -no-color -auto-approve plan-lve.tfplan

  trigger_scan:
    name: Trigger Policy State Scan (master only)
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [ apply_nlv, apply_lve ]
    steps:
      - name: Azure Login (Nonlive)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_NONLIVE }}

      - name: Trigger Policy State Scan - Nonlive
        shell: bash
        run: |
          set -euo pipefail
          az policy state scan --subscription 0511a7fe-771b-4ffa-9348-c59e9c4a87bd
          az policy state scan --subscription 8cdb5405-7535-4349-92e9-f52bddc7833a
          az policy state scan --subscription e6b5053b-4c38-4475-a835-a025aeb3d8c7

      - name: Azure Login (Live)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_LIVE }}

      - name: Trigger Policy State Scan - Live
        shell: bash
        run: |
          set -euo pipefail
          az policy state scan --subscription e7819cdc-66af-4611-9dba-b9958e5b6d7d
          az policy state scan --subscription 9ab65d81-930d-4cc0-a93d-367e14676bc0
